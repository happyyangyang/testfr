package com.test.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ReporterExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table reporter
     *
     * @mbggenerated Thu Jul 13 15:49:24 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table reporter
     *
     * @mbggenerated Thu Jul 13 15:49:24 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table reporter
     *
     * @mbggenerated Thu Jul 13 15:49:24 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Thu Jul 13 15:49:24 CST 2017
     */
    public ReporterExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Thu Jul 13 15:49:24 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Thu Jul 13 15:49:24 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Thu Jul 13 15:49:24 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Thu Jul 13 15:49:24 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Thu Jul 13 15:49:24 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Thu Jul 13 15:49:24 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Thu Jul 13 15:49:24 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Thu Jul 13 15:49:24 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Thu Jul 13 15:49:24 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Thu Jul 13 15:49:24 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table reporter
     *
     * @mbggenerated Thu Jul 13 15:49:24 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andExcdateIsNull() {
            addCriterion("excdate is null");
            return (Criteria) this;
        }

        public Criteria andExcdateIsNotNull() {
            addCriterion("excdate is not null");
            return (Criteria) this;
        }

        public Criteria andExcdateEqualTo(Date value) {
            addCriterion("excdate =", value, "excdate");
            return (Criteria) this;
        }

        public Criteria andExcdateNotEqualTo(Date value) {
            addCriterion("excdate <>", value, "excdate");
            return (Criteria) this;
        }

        public Criteria andExcdateGreaterThan(Date value) {
            addCriterion("excdate >", value, "excdate");
            return (Criteria) this;
        }

        public Criteria andExcdateGreaterThanOrEqualTo(Date value) {
            addCriterion("excdate >=", value, "excdate");
            return (Criteria) this;
        }

        public Criteria andExcdateLessThan(Date value) {
            addCriterion("excdate <", value, "excdate");
            return (Criteria) this;
        }

        public Criteria andExcdateLessThanOrEqualTo(Date value) {
            addCriterion("excdate <=", value, "excdate");
            return (Criteria) this;
        }

        public Criteria andExcdateIn(List<Date> values) {
            addCriterion("excdate in", values, "excdate");
            return (Criteria) this;
        }

        public Criteria andExcdateNotIn(List<Date> values) {
            addCriterion("excdate not in", values, "excdate");
            return (Criteria) this;
        }

        public Criteria andExcdateBetween(Date value1, Date value2) {
            addCriterion("excdate between", value1, value2, "excdate");
            return (Criteria) this;
        }

        public Criteria andExcdateNotBetween(Date value1, Date value2) {
            addCriterion("excdate not between", value1, value2, "excdate");
            return (Criteria) this;
        }

        public Criteria andTotaltimeIsNull() {
            addCriterion("totaltime is null");
            return (Criteria) this;
        }

        public Criteria andTotaltimeIsNotNull() {
            addCriterion("totaltime is not null");
            return (Criteria) this;
        }

        public Criteria andTotaltimeEqualTo(String value) {
            addCriterion("totaltime =", value, "totaltime");
            return (Criteria) this;
        }

        public Criteria andTotaltimeNotEqualTo(String value) {
            addCriterion("totaltime <>", value, "totaltime");
            return (Criteria) this;
        }

        public Criteria andTotaltimeGreaterThan(String value) {
            addCriterion("totaltime >", value, "totaltime");
            return (Criteria) this;
        }

        public Criteria andTotaltimeGreaterThanOrEqualTo(String value) {
            addCriterion("totaltime >=", value, "totaltime");
            return (Criteria) this;
        }

        public Criteria andTotaltimeLessThan(String value) {
            addCriterion("totaltime <", value, "totaltime");
            return (Criteria) this;
        }

        public Criteria andTotaltimeLessThanOrEqualTo(String value) {
            addCriterion("totaltime <=", value, "totaltime");
            return (Criteria) this;
        }

        public Criteria andTotaltimeLike(String value) {
            addCriterion("totaltime like", value, "totaltime");
            return (Criteria) this;
        }

        public Criteria andTotaltimeNotLike(String value) {
            addCriterion("totaltime not like", value, "totaltime");
            return (Criteria) this;
        }

        public Criteria andTotaltimeIn(List<String> values) {
            addCriterion("totaltime in", values, "totaltime");
            return (Criteria) this;
        }

        public Criteria andTotaltimeNotIn(List<String> values) {
            addCriterion("totaltime not in", values, "totaltime");
            return (Criteria) this;
        }

        public Criteria andTotaltimeBetween(String value1, String value2) {
            addCriterion("totaltime between", value1, value2, "totaltime");
            return (Criteria) this;
        }

        public Criteria andTotaltimeNotBetween(String value1, String value2) {
            addCriterion("totaltime not between", value1, value2, "totaltime");
            return (Criteria) this;
        }

        public Criteria andTotalcountIsNull() {
            addCriterion("totalcount is null");
            return (Criteria) this;
        }

        public Criteria andTotalcountIsNotNull() {
            addCriterion("totalcount is not null");
            return (Criteria) this;
        }

        public Criteria andTotalcountEqualTo(Integer value) {
            addCriterion("totalcount =", value, "totalcount");
            return (Criteria) this;
        }

        public Criteria andTotalcountNotEqualTo(Integer value) {
            addCriterion("totalcount <>", value, "totalcount");
            return (Criteria) this;
        }

        public Criteria andTotalcountGreaterThan(Integer value) {
            addCriterion("totalcount >", value, "totalcount");
            return (Criteria) this;
        }

        public Criteria andTotalcountGreaterThanOrEqualTo(Integer value) {
            addCriterion("totalcount >=", value, "totalcount");
            return (Criteria) this;
        }

        public Criteria andTotalcountLessThan(Integer value) {
            addCriterion("totalcount <", value, "totalcount");
            return (Criteria) this;
        }

        public Criteria andTotalcountLessThanOrEqualTo(Integer value) {
            addCriterion("totalcount <=", value, "totalcount");
            return (Criteria) this;
        }

        public Criteria andTotalcountIn(List<Integer> values) {
            addCriterion("totalcount in", values, "totalcount");
            return (Criteria) this;
        }

        public Criteria andTotalcountNotIn(List<Integer> values) {
            addCriterion("totalcount not in", values, "totalcount");
            return (Criteria) this;
        }

        public Criteria andTotalcountBetween(Integer value1, Integer value2) {
            addCriterion("totalcount between", value1, value2, "totalcount");
            return (Criteria) this;
        }

        public Criteria andTotalcountNotBetween(Integer value1, Integer value2) {
            addCriterion("totalcount not between", value1, value2, "totalcount");
            return (Criteria) this;
        }

        public Criteria andSuccesscountIsNull() {
            addCriterion("successcount is null");
            return (Criteria) this;
        }

        public Criteria andSuccesscountIsNotNull() {
            addCriterion("successcount is not null");
            return (Criteria) this;
        }

        public Criteria andSuccesscountEqualTo(Integer value) {
            addCriterion("successcount =", value, "successcount");
            return (Criteria) this;
        }

        public Criteria andSuccesscountNotEqualTo(Integer value) {
            addCriterion("successcount <>", value, "successcount");
            return (Criteria) this;
        }

        public Criteria andSuccesscountGreaterThan(Integer value) {
            addCriterion("successcount >", value, "successcount");
            return (Criteria) this;
        }

        public Criteria andSuccesscountGreaterThanOrEqualTo(Integer value) {
            addCriterion("successcount >=", value, "successcount");
            return (Criteria) this;
        }

        public Criteria andSuccesscountLessThan(Integer value) {
            addCriterion("successcount <", value, "successcount");
            return (Criteria) this;
        }

        public Criteria andSuccesscountLessThanOrEqualTo(Integer value) {
            addCriterion("successcount <=", value, "successcount");
            return (Criteria) this;
        }

        public Criteria andSuccesscountIn(List<Integer> values) {
            addCriterion("successcount in", values, "successcount");
            return (Criteria) this;
        }

        public Criteria andSuccesscountNotIn(List<Integer> values) {
            addCriterion("successcount not in", values, "successcount");
            return (Criteria) this;
        }

        public Criteria andSuccesscountBetween(Integer value1, Integer value2) {
            addCriterion("successcount between", value1, value2, "successcount");
            return (Criteria) this;
        }

        public Criteria andSuccesscountNotBetween(Integer value1, Integer value2) {
            addCriterion("successcount not between", value1, value2, "successcount");
            return (Criteria) this;
        }

        public Criteria andFailurescountIsNull() {
            addCriterion("failurescount is null");
            return (Criteria) this;
        }

        public Criteria andFailurescountIsNotNull() {
            addCriterion("failurescount is not null");
            return (Criteria) this;
        }

        public Criteria andFailurescountEqualTo(Integer value) {
            addCriterion("failurescount =", value, "failurescount");
            return (Criteria) this;
        }

        public Criteria andFailurescountNotEqualTo(Integer value) {
            addCriterion("failurescount <>", value, "failurescount");
            return (Criteria) this;
        }

        public Criteria andFailurescountGreaterThan(Integer value) {
            addCriterion("failurescount >", value, "failurescount");
            return (Criteria) this;
        }

        public Criteria andFailurescountGreaterThanOrEqualTo(Integer value) {
            addCriterion("failurescount >=", value, "failurescount");
            return (Criteria) this;
        }

        public Criteria andFailurescountLessThan(Integer value) {
            addCriterion("failurescount <", value, "failurescount");
            return (Criteria) this;
        }

        public Criteria andFailurescountLessThanOrEqualTo(Integer value) {
            addCriterion("failurescount <=", value, "failurescount");
            return (Criteria) this;
        }

        public Criteria andFailurescountIn(List<Integer> values) {
            addCriterion("failurescount in", values, "failurescount");
            return (Criteria) this;
        }

        public Criteria andFailurescountNotIn(List<Integer> values) {
            addCriterion("failurescount not in", values, "failurescount");
            return (Criteria) this;
        }

        public Criteria andFailurescountBetween(Integer value1, Integer value2) {
            addCriterion("failurescount between", value1, value2, "failurescount");
            return (Criteria) this;
        }

        public Criteria andFailurescountNotBetween(Integer value1, Integer value2) {
            addCriterion("failurescount not between", value1, value2, "failurescount");
            return (Criteria) this;
        }

        public Criteria andSkipscountIsNull() {
            addCriterion("skipscount is null");
            return (Criteria) this;
        }

        public Criteria andSkipscountIsNotNull() {
            addCriterion("skipscount is not null");
            return (Criteria) this;
        }

        public Criteria andSkipscountEqualTo(Integer value) {
            addCriterion("skipscount =", value, "skipscount");
            return (Criteria) this;
        }

        public Criteria andSkipscountNotEqualTo(Integer value) {
            addCriterion("skipscount <>", value, "skipscount");
            return (Criteria) this;
        }

        public Criteria andSkipscountGreaterThan(Integer value) {
            addCriterion("skipscount >", value, "skipscount");
            return (Criteria) this;
        }

        public Criteria andSkipscountGreaterThanOrEqualTo(Integer value) {
            addCriterion("skipscount >=", value, "skipscount");
            return (Criteria) this;
        }

        public Criteria andSkipscountLessThan(Integer value) {
            addCriterion("skipscount <", value, "skipscount");
            return (Criteria) this;
        }

        public Criteria andSkipscountLessThanOrEqualTo(Integer value) {
            addCriterion("skipscount <=", value, "skipscount");
            return (Criteria) this;
        }

        public Criteria andSkipscountIn(List<Integer> values) {
            addCriterion("skipscount in", values, "skipscount");
            return (Criteria) this;
        }

        public Criteria andSkipscountNotIn(List<Integer> values) {
            addCriterion("skipscount not in", values, "skipscount");
            return (Criteria) this;
        }

        public Criteria andSkipscountBetween(Integer value1, Integer value2) {
            addCriterion("skipscount between", value1, value2, "skipscount");
            return (Criteria) this;
        }

        public Criteria andSkipscountNotBetween(Integer value1, Integer value2) {
            addCriterion("skipscount not between", value1, value2, "skipscount");
            return (Criteria) this;
        }

        public Criteria andErrorcountIsNull() {
            addCriterion("errorcount is null");
            return (Criteria) this;
        }

        public Criteria andErrorcountIsNotNull() {
            addCriterion("errorcount is not null");
            return (Criteria) this;
        }

        public Criteria andErrorcountEqualTo(Integer value) {
            addCriterion("errorcount =", value, "errorcount");
            return (Criteria) this;
        }

        public Criteria andErrorcountNotEqualTo(Integer value) {
            addCriterion("errorcount <>", value, "errorcount");
            return (Criteria) this;
        }

        public Criteria andErrorcountGreaterThan(Integer value) {
            addCriterion("errorcount >", value, "errorcount");
            return (Criteria) this;
        }

        public Criteria andErrorcountGreaterThanOrEqualTo(Integer value) {
            addCriterion("errorcount >=", value, "errorcount");
            return (Criteria) this;
        }

        public Criteria andErrorcountLessThan(Integer value) {
            addCriterion("errorcount <", value, "errorcount");
            return (Criteria) this;
        }

        public Criteria andErrorcountLessThanOrEqualTo(Integer value) {
            addCriterion("errorcount <=", value, "errorcount");
            return (Criteria) this;
        }

        public Criteria andErrorcountIn(List<Integer> values) {
            addCriterion("errorcount in", values, "errorcount");
            return (Criteria) this;
        }

        public Criteria andErrorcountNotIn(List<Integer> values) {
            addCriterion("errorcount not in", values, "errorcount");
            return (Criteria) this;
        }

        public Criteria andErrorcountBetween(Integer value1, Integer value2) {
            addCriterion("errorcount between", value1, value2, "errorcount");
            return (Criteria) this;
        }

        public Criteria andErrorcountNotBetween(Integer value1, Integer value2) {
            addCriterion("errorcount not between", value1, value2, "errorcount");
            return (Criteria) this;
        }

        public Criteria andSuccesspercentIsNull() {
            addCriterion("successpercent is null");
            return (Criteria) this;
        }

        public Criteria andSuccesspercentIsNotNull() {
            addCriterion("successpercent is not null");
            return (Criteria) this;
        }

        public Criteria andSuccesspercentEqualTo(Double value) {
            addCriterion("successpercent =", value, "successpercent");
            return (Criteria) this;
        }

        public Criteria andSuccesspercentNotEqualTo(Double value) {
            addCriterion("successpercent <>", value, "successpercent");
            return (Criteria) this;
        }

        public Criteria andSuccesspercentGreaterThan(Double value) {
            addCriterion("successpercent >", value, "successpercent");
            return (Criteria) this;
        }

        public Criteria andSuccesspercentGreaterThanOrEqualTo(Double value) {
            addCriterion("successpercent >=", value, "successpercent");
            return (Criteria) this;
        }

        public Criteria andSuccesspercentLessThan(Double value) {
            addCriterion("successpercent <", value, "successpercent");
            return (Criteria) this;
        }

        public Criteria andSuccesspercentLessThanOrEqualTo(Double value) {
            addCriterion("successpercent <=", value, "successpercent");
            return (Criteria) this;
        }

        public Criteria andSuccesspercentIn(List<Double> values) {
            addCriterion("successpercent in", values, "successpercent");
            return (Criteria) this;
        }

        public Criteria andSuccesspercentNotIn(List<Double> values) {
            addCriterion("successpercent not in", values, "successpercent");
            return (Criteria) this;
        }

        public Criteria andSuccesspercentBetween(Double value1, Double value2) {
            addCriterion("successpercent between", value1, value2, "successpercent");
            return (Criteria) this;
        }

        public Criteria andSuccesspercentNotBetween(Double value1, Double value2) {
            addCriterion("successpercent not between", value1, value2, "successpercent");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table reporter
     *
     * @mbggenerated do_not_delete_during_merge Thu Jul 13 15:49:24 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table reporter
     *
     * @mbggenerated Thu Jul 13 15:49:24 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}