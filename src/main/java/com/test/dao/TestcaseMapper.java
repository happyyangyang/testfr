package com.test.dao;

import com.test.model.Testcase;
import com.test.model.TestcaseExample;
import com.test.vo.CaseVo;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TestcaseMapper {
	
	
	 @Select({
	    	"select *",
	        "from testcase"
	    })
	    List<Testcase> getlist();
	    
	    
	    @Select({
	    	"select a.id,",
	    	"a.casename,",
	    	"a.scenario,",
	    	"a.parmater,",
	    	"a.expectkey1,",
	    	"a.expectvalue1,",
	    	"a.expectkey2,",
	    	"a.expectvalue2,",
	    	"c.name,",
	    	"c.url,",
	    	"c.method,",
	    	"c.projectname",
	    	"from testcase a ,(select DISTINCT b.name,b.url,b.method,b.projectname from testcase a,apinfor b",
	    	"where a.apiid = b.id) c"
	    		
	    })
	    List<CaseVo> getCaseList1();
	    
	    @Select({
	    	"select a.id,",
	    	"a.casename,",
	    	"a.scenario,",
	    	"a.parmater,",
	    	"a.expectkey1,",
	    	"a.expectvalue1,",
	    	"a.expectkey2,",
	    	"a.expectvalue2,",
	    	"b.name,",
	    	"b.url,",
	    	"b.method,",
	    	"b.projectname",
	    	"from testcase a ,apinfor b",
	    	"where a.id = #{id,jdbcType=VARCHAR}",
	    	"and a.apiid = b.id"
	    		
	    })
	    CaseVo selectByid(String id);
	    
	    @Select({
	    	"select a.id,",
	    	"a.casename,",
	    	"a.scenario,",
	    	"a.parmater,",
	    	"a.expectkey1,",
	    	"a.expectvalue1,",
	    	"a.expectkey2,",
	    	"a.expectvalue2,",
	    	"b.name,",
	    	"b.url,",
	    	"b.method,",
	    	"b.projectname",
	    	"from testcase a ,apinfor b",
	    	"where a.apiid = b.id"
	    	
	    		
	    })
	    List<CaseVo> getCaseList();
	    
	   
	    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table testcase
     *
     * @mbggenerated Wed Jul 12 15:05:45 CST 2017
     */
    @SelectProvider(type=TestcaseSqlProvider.class, method="countByExample")
    int countByExample(TestcaseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table testcase
     *
     * @mbggenerated Wed Jul 12 15:05:45 CST 2017
     */
    @DeleteProvider(type=TestcaseSqlProvider.class, method="deleteByExample")
    int deleteByExample(TestcaseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table testcase
     *
     * @mbggenerated Wed Jul 12 15:05:45 CST 2017
     */
    @Delete({
        "delete from testcase",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table testcase
     *
     * @mbggenerated Wed Jul 12 15:05:45 CST 2017
     */
    @Insert({
        "insert into testcase (id, casename, ",
        "scenario, parmater, ",
        "apiid, expectkey1, ",
        "expectvalue1, expectkey2, ",
        "expectvalue2)",
        "values (#{id,jdbcType=VARCHAR}, #{casename,jdbcType=VARCHAR}, ",
        "#{scenario,jdbcType=VARCHAR}, #{parmater,jdbcType=VARCHAR}, ",
        "#{apiid,jdbcType=VARCHAR}, #{expectkey1,jdbcType=VARCHAR}, ",
        "#{expectvalue1,jdbcType=VARCHAR}, #{expectkey2,jdbcType=VARCHAR}, ",
        "#{expectvalue2,jdbcType=VARCHAR})"
    })
    int insert(Testcase record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table testcase
     *
     * @mbggenerated Wed Jul 12 15:05:45 CST 2017
     */
    @InsertProvider(type=TestcaseSqlProvider.class, method="insertSelective")
    int insertSelective(Testcase record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table testcase
     *
     * @mbggenerated Wed Jul 12 15:05:45 CST 2017
     */
    @SelectProvider(type=TestcaseSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="casename", property="casename", jdbcType=JdbcType.VARCHAR),
        @Result(column="scenario", property="scenario", jdbcType=JdbcType.VARCHAR),
        @Result(column="parmater", property="parmater", jdbcType=JdbcType.VARCHAR),
        @Result(column="apiid", property="apiid", jdbcType=JdbcType.VARCHAR),
        @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
        @Result(column="method", property="method", jdbcType=JdbcType.VARCHAR),
        @Result(column="projectname", property="projectname", jdbcType=JdbcType.VARCHAR),
        @Result(column="projectname", property="projectname", jdbcType=JdbcType.VARCHAR),
        @Result(column="expectkey1", property="expectkey1", jdbcType=JdbcType.VARCHAR),
        @Result(column="expectvalue1", property="expectvalue1", jdbcType=JdbcType.VARCHAR),
        @Result(column="expectkey2", property="expectkey2", jdbcType=JdbcType.VARCHAR),
        @Result(column="expectvalue2", property="expectvalue2", jdbcType=JdbcType.VARCHAR)
    })
    List<Testcase> selectByExample(TestcaseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table testcase
     *
     * @mbggenerated Wed Jul 12 15:05:45 CST 2017
     */
    @Select({
    	"select",
        "casename, scenario, parmater, expectkey1,expectvalue1,expectkey2,expectvalue2, apiid,name,url,method,projectname",
        "from testcase,apinfor",
        "where testcase.id = #{id,jdbcType=VARCHAR}",
        "and testcase.apiid = apinfor.id"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="casename", property="casename", jdbcType=JdbcType.VARCHAR),
        @Result(column="scenario", property="scenario", jdbcType=JdbcType.VARCHAR),
        @Result(column="parmater", property="parmater", jdbcType=JdbcType.VARCHAR),
        @Result(column="apiid", property="apiid", jdbcType=JdbcType.VARCHAR),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
        @Result(column="method", property="method", jdbcType=JdbcType.VARCHAR),
        @Result(column="projectname", property="projectname", jdbcType=JdbcType.VARCHAR),
        @Result(column="expectkey1", property="expectkey1", jdbcType=JdbcType.VARCHAR),
        @Result(column="expectvalue1", property="expectvalue1", jdbcType=JdbcType.VARCHAR),
        @Result(column="expectkey2", property="expectkey2", jdbcType=JdbcType.VARCHAR),
        @Result(column="expectvalue2", property="expectvalue2", jdbcType=JdbcType.VARCHAR)
    })
    CaseVo selectByPrimaryKey(String id);
    
    
    @Select({
    	"select a.id,",
    	"a.casename,",
    	"a.scenario,",
    	"a.parmater,",
    	"a.expectkey1,",
    	"a.expectvalue1,",
    	"a.expectkey2,",
    	"a.expectvalue2,",
    	"a.apiid",
    	"from testcase a",
    	"where a.id = #{id,jdbcType=VARCHAR}"
    		
    })
    Testcase selectid(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table testcase
     *
     * @mbggenerated Wed Jul 12 15:05:45 CST 2017
     */
    @UpdateProvider(type=TestcaseSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Testcase record, @Param("example") TestcaseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table testcase
     *
     * @mbggenerated Wed Jul 12 15:05:45 CST 2017
     */
    @UpdateProvider(type=TestcaseSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Testcase record, @Param("example") TestcaseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table testcase
     *
     * @mbggenerated Wed Jul 12 15:05:45 CST 2017
     */
    @UpdateProvider(type=TestcaseSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Testcase record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table testcase
     *
     * @mbggenerated Wed Jul 12 15:05:45 CST 2017
     */
    @Update({
        "update testcase",
        "set casename = #{casename,jdbcType=VARCHAR},",
          "scenario = #{scenario,jdbcType=VARCHAR},",
          "parmater = #{parmater,jdbcType=VARCHAR},",
          "apiid = #{apiid,jdbcType=VARCHAR},",
          "expectkey1 = #{expectkey1,jdbcType=VARCHAR},",
          "expectvalue1 = #{expectvalue1,jdbcType=VARCHAR},",
          "expectkey2 = #{expectkey2,jdbcType=VARCHAR},",
          "expectvalue2 = #{expectvalue2,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Testcase record);
}