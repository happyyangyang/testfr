package com.test.dao;

import com.test.model.Reporter;
import com.test.model.ReporterExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface ReporterMapper {
	
	
	  @Select({
	    	"select a.id,",
	    	"a.excdate,",
	    	"a.totaltime,",
	    	"a.totalcount,",
	    	"a.successcount,",
	    	"a.failurescount,",
	    	"a.skipscount,",
	    	"a.errorcount,",
	    	"a.successpercent,",
	    	"a.text",
	    	"from reporter a",
	    	"where a.id = #{id,jdbcType=VARCHAR}"
	    		
	    })
	   Reporter selectid(String id);
	

  @Select({
  	"select *",
      "from reporter",
      "where DATE_FORMAT(`excdate`,'%Y-%m-%d')=#{date,jdbcType=VARCHAR}",
      "order by excdate desc"
  })
  List<Reporter> AllApinforbydate(String date);
  @Select({
	  	"select *",
	      "from reporter",
	      "order by excdate desc"
	  })
	  List<Reporter> AllApinfor();
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Sun Jul 16 11:16:31 CST 2017
     */
    @SelectProvider(type=ReporterSqlProvider.class, method="countByExample")
    int countByExample(ReporterExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Sun Jul 16 11:16:31 CST 2017
     */
    @DeleteProvider(type=ReporterSqlProvider.class, method="deleteByExample")
    int deleteByExample(ReporterExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Sun Jul 16 11:16:31 CST 2017
     */
    @Delete({
        "delete from reporter",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Sun Jul 16 11:16:31 CST 2017
     */
    @Insert({
        "insert into reporter (id, excdate, ",
        "totaltime, totalcount, ",
        "successcount, failurescount, ",
        "skipscount, errorcount, ",
        "successpercent, text)",
        "values (#{id,jdbcType=VARCHAR}, #{excdate,jdbcType=TIMESTAMP}, ",
        "#{totaltime,jdbcType=VARCHAR}, #{totalcount,jdbcType=INTEGER}, ",
        "#{successcount,jdbcType=INTEGER}, #{failurescount,jdbcType=INTEGER}, ",
        "#{skipscount,jdbcType=INTEGER}, #{errorcount,jdbcType=INTEGER}, ",
        "#{successpercent,jdbcType=DOUBLE}, #{text,jdbcType=LONGVARCHAR})"
    })
    int insert(Reporter record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Sun Jul 16 11:16:31 CST 2017
     */
    @InsertProvider(type=ReporterSqlProvider.class, method="insertSelective")
    int insertSelective(Reporter record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Sun Jul 16 11:16:31 CST 2017
     */
    @SelectProvider(type=ReporterSqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="excdate", property="excdate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="totaltime", property="totaltime", jdbcType=JdbcType.VARCHAR),
        @Result(column="totalcount", property="totalcount", jdbcType=JdbcType.INTEGER),
        @Result(column="successcount", property="successcount", jdbcType=JdbcType.INTEGER),
        @Result(column="failurescount", property="failurescount", jdbcType=JdbcType.INTEGER),
        @Result(column="skipscount", property="skipscount", jdbcType=JdbcType.INTEGER),
        @Result(column="errorcount", property="errorcount", jdbcType=JdbcType.INTEGER),
        @Result(column="successpercent", property="successpercent", jdbcType=JdbcType.DOUBLE),
        @Result(column="text", property="text", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<Reporter> selectByExampleWithBLOBs(ReporterExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Sun Jul 16 11:16:31 CST 2017
     */
    @SelectProvider(type=ReporterSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="excdate", property="excdate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="totaltime", property="totaltime", jdbcType=JdbcType.VARCHAR),
        @Result(column="totalcount", property="totalcount", jdbcType=JdbcType.INTEGER),
        @Result(column="successcount", property="successcount", jdbcType=JdbcType.INTEGER),
        @Result(column="failurescount", property="failurescount", jdbcType=JdbcType.INTEGER),
        @Result(column="skipscount", property="skipscount", jdbcType=JdbcType.INTEGER),
        @Result(column="errorcount", property="errorcount", jdbcType=JdbcType.INTEGER),
        @Result(column="successpercent", property="successpercent", jdbcType=JdbcType.DOUBLE)
    })
    List<Reporter> selectByExample(ReporterExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Sun Jul 16 11:16:31 CST 2017
     */
    @Select({
        "select",
        "id, excdate, totaltime, totalcount, successcount, failurescount, skipscount, ",
        "errorcount, successpercent, text",
        "from reporter",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="excdate", property="excdate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="totaltime", property="totaltime", jdbcType=JdbcType.VARCHAR),
        @Result(column="totalcount", property="totalcount", jdbcType=JdbcType.INTEGER),
        @Result(column="successcount", property="successcount", jdbcType=JdbcType.INTEGER),
        @Result(column="failurescount", property="failurescount", jdbcType=JdbcType.INTEGER),
        @Result(column="skipscount", property="skipscount", jdbcType=JdbcType.INTEGER),
        @Result(column="errorcount", property="errorcount", jdbcType=JdbcType.INTEGER),
        @Result(column="successpercent", property="successpercent", jdbcType=JdbcType.DOUBLE),
        @Result(column="text", property="text", jdbcType=JdbcType.LONGVARCHAR)
    })
    Reporter selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Sun Jul 16 11:16:31 CST 2017
     */
    @UpdateProvider(type=ReporterSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Reporter record, @Param("example") ReporterExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Sun Jul 16 11:16:31 CST 2017
     */
    @UpdateProvider(type=ReporterSqlProvider.class, method="updateByExampleWithBLOBs")
    int updateByExampleWithBLOBs(@Param("record") Reporter record, @Param("example") ReporterExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Sun Jul 16 11:16:31 CST 2017
     */
    @UpdateProvider(type=ReporterSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Reporter record, @Param("example") ReporterExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Sun Jul 16 11:16:31 CST 2017
     */
    @UpdateProvider(type=ReporterSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Reporter record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Sun Jul 16 11:16:31 CST 2017
     */
    @Update({
        "update reporter",
        "set excdate = #{excdate,jdbcType=TIMESTAMP},",
          "totaltime = #{totaltime,jdbcType=VARCHAR},",
          "totalcount = #{totalcount,jdbcType=INTEGER},",
          "successcount = #{successcount,jdbcType=INTEGER},",
          "failurescount = #{failurescount,jdbcType=INTEGER},",
          "skipscount = #{skipscount,jdbcType=INTEGER},",
          "errorcount = #{errorcount,jdbcType=INTEGER},",
          "successpercent = #{successpercent,jdbcType=DOUBLE},",
          "text = #{text,jdbcType=LONGVARCHAR}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKeyWithBLOBs(Reporter record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporter
     *
     * @mbggenerated Sun Jul 16 11:16:31 CST 2017
     */
    @Update({
        "update reporter",
        "set excdate = #{excdate,jdbcType=TIMESTAMP},",
          "totaltime = #{totaltime,jdbcType=VARCHAR},",
          "totalcount = #{totalcount,jdbcType=INTEGER},",
          "successcount = #{successcount,jdbcType=INTEGER},",
          "failurescount = #{failurescount,jdbcType=INTEGER},",
          "skipscount = #{skipscount,jdbcType=INTEGER},",
          "errorcount = #{errorcount,jdbcType=INTEGER},",
          "successpercent = #{successpercent,jdbcType=DOUBLE}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Reporter record);
}